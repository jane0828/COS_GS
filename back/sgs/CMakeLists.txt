CMAKE_MINIMUM_REQUIRED( VERSION 3.10.0 )

PROJECT(ServerSGS)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ./cmake)
SET(SSGS_LIB_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../lib")
SET(SSGS_BIN_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../bin")
SET(SSGS_UTL_PATH "${CMAKE_CURRENT_SOURCE_DIR}/utl/inc")
SET(SSGS_IFC_PATH "${CMAKE_CURRENT_SOURCE_DIR}/ifc/inc")
SET(SSGS_DCS_PATH "${CMAKE_CURRENT_SOURCE_DIR}/dcs/inc")
SET(SSGS_GTS_PATH "${CMAKE_CURRENT_SOURCE_DIR}/gts/inc")

INCLUDE_DIRECTORIES (${SSGS_UTL_PATH})
INCLUDE_DIRECTORIES (${SSGS_IFC_PATH})
INCLUDE_DIRECTORIES (${SSGS_DCS_PATH})
INCLUDE_DIRECTORIES (${SSGS_GTS_PATH})

INCLUDE_DIRECTORIES (/usr/local/include)
INCLUDE_DIRECTORIES (/usr/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH})
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/sgp4/libsgp4)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/build)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libparam_client/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libutil/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libgscsp/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libgscsp/lib/libcsp/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libgscsp/lib/libcsp/src)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/build/lib/libgscsp/lib/libcsp/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libfp_client/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libftp_client/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/gscsp/lib/libgosh_client/include)
INCLUDE_DIRECTORIES (${SSGS_LIB_PATH}/websocktapp)

FIND_PACKAGE(Threads REQUIRED)
if(NOT Threads_FOUND)
    message(FATAL_ERROR "Threads Not Found.")
endif()
INCLUDE_DIRECTORIES( ${THREADS_INCLUDE_DIRS} )

FIND_PACKAGE(CURL REQUIRED)
if(NOT CURL_FOUND)
    message(FATAL_ERROR "CURL Not Found.")
endif()
INCLUDE_DIRECTORIES(${CURL_INCLUDE_DIRS})

FIND_PACKAGE(Boost REQUIRED COMPONENTS system thread)
if(NOT Boost_FOUND)
    message(FATAL_ERROR "Boost Not Found.")
endif()
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

FIND_PACKAGE(OpenSSL REQUIRED)
if(NOT OPENSSL_FOUND)
    message(FATAL_ERROR "OpenSSL Not Found.")
endif()
INCLUDE_DIRECTORIES(${OpenSSL_INCLUDE_DIRS})

FIND_PACKAGE(PkgConfig REQUIRED)
if(NOT PkgConfig_FOUND)
    message(FATAL_ERROR "PkgConfig Not Found.")
endif()

find_library(SOCKETCAN_LIB socketcan)
if(NOT SOCKETCAN_LIB)
    message(FATAL_ERROR "libsocketcan not found. Install libsocketcan-dev")
endif()

pkg_check_modules(JSONCPP REQUIRED jsoncpp)
INCLUDE_DIRECTORIES(${JSONCPP_INCLUDE_DIRS})
pkg_check_modules(MySQL REQUIRED mysqlclient)
INCLUDE_DIRECTORIES(${MySQL_INCLUDE_DIRS})

ADD_SUBDIRECTORY(utl)
ADD_SUBDIRECTORY(ifc)
ADD_SUBDIRECTORY(dcs)
ADD_SUBDIRECTORY(gts)
LINK_DIRECTORIES(${SSGS_BIN_PATH})

ADD_EXECUTABLE(ServerSGS main.cpp)
ADD_DEPENDENCIES(ServerSGS UTL)
ADD_DEPENDENCIES(ServerSGS IFC)
ADD_DEPENDENCIES(ServerSGS DCS)
ADD_DEPENDENCIES(ServerSGS GTS)
TARGET_LINK_LIBRARIES(ServerSGS
    ${CURL_LIBRARIES}
    pthread
    Boost::system
    Boost::thread
    OpenSSL::SSL
    OpenSSL::Crypto
    ${JSONCPP_LIBRARIES}
    ${MySQL_LIBRARIES}
    ${SSGS_BIN_PATH}/libsgp4s.so
    ${SSGS_BIN_PATH}/libcsp-client.so
    ${SSGS_BIN_PATH}/libUTL.so
    ${SSGS_BIN_PATH}/libIFC.so
    ${SSGS_BIN_PATH}/libDCS.so
    ${SSGS_BIN_PATH}/libGTS.so
    ${SOCKETCAN_LIB} 
)

TARGET_COMPILE_OPTIONS(ServerSGS PRIVATE -Wall -g)
