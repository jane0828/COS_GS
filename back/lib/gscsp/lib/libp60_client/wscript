#!/usr/bin/env python
# encoding: utf-8
# Copyright (c) 2013-2019 GomSpace A/S. All rights reserved.
import gs_gcc

APPNAME = 'p60_client'


def options(ctx):
    ctx.load('gs_gcc')
    ctx.recurse(gs_gcc.get_modules(ctx))
    gr = ctx.add_option_group('NanoPower-P60 library client options')
    gr.add_option('--disable-libp60-cmd', action='store_true', help='Disable client cmd code for NanoPower-P60 library')


def configure(ctx):
    ctx.load('gs_gcc')
    ctx.env.append_unique('FILES_LIBP60_CLIENT', ['src/*.c'])
    if not ctx.options.disable_libp60_cmd:
        ctx.env.append_unique('FILES_LIBP60_CLIENT', ['src/cmd/*.c'])
    ctx.recurse(gs_gcc.get_modules(ctx))


def build(ctx):
    ctx.recurse(gs_gcc.get_modules(ctx))
    public_include = APPNAME + '_h'

    ctx(export_includes=['include'], name=public_include)
    ctx.objects(source=ctx.path.ant_glob(ctx.env.FILES_LIBP60_CLIENT),
                target=APPNAME,
                use=['csp', 'gosh', 'param', 'param_client', 'util', public_include])

    ctx.gs_shlib(source=ctx.path.ant_glob(ctx.env.FILES_LIBP60_CLIENT),
                 target=APPNAME,
                 gs_use_shlib=['csp', 'gosh', 'param', 'param_client', 'util', public_include],
                 )

    ctx.gs_python_bindings(source=ctx.path.ant_glob('src/bindings/python/*.c'),
                           target=APPNAME,
                           gs_use_shlib=[APPNAME],
                           package='libp60')


def gs_dist(ctx):
    ctx.add_default_files(source_module=True)
